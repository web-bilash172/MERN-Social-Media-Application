{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea.js';\nimport { Divider } from '../../Divider/Divider.js';\nimport useStyles from './RenderList.styles.js';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.js';\nimport { Text } from '../../Text/Text.js';\nimport { TextInput } from '../../TextInput/TextInput.js';\nimport { ActionIcon } from '../../ActionIcon/ActionIcon.js';\nimport { PrevIcon } from '../../Pagination/icons/PrevIcon.js';\nimport { NextIcon } from '../../Pagination/icons/NextIcon.js';\nimport { FirstIcon } from '../../Pagination/icons/FirstIcon.js';\nimport { LastIcon } from '../../Pagination/icons/LastIcon.js';\nconst icons = {\n  Prev: PrevIcon,\n  Next: NextIcon,\n  First: FirstIcon,\n  Last: LastIcon\n};\nconst rtlIons = {\n  Next: PrevIcon,\n  Prev: NextIcon,\n  Last: FirstIcon,\n  First: LastIcon\n};\nfunction RenderList(_ref) {\n  let {\n    className,\n    data,\n    onSelect,\n    selection,\n    itemComponent: ItemComponent,\n    listComponent,\n    searchPlaceholder,\n    filter,\n    nothingFound,\n    title,\n    showTransferAll,\n    reversed,\n    onMoveAll,\n    onMove,\n    height,\n    radius,\n    classNames,\n    styles,\n    limit,\n    unstyled\n  } = _ref;\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    reversed,\n    native: listComponent !== SelectScrollArea,\n    radius\n  }, {\n    name: \"TransferList\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const unGroupedItems = [];\n  const groupedItems = [];\n  const [query, setQuery] = useState(\"\");\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter(item => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || \"div\";\n  const Icons = theme.dir === \"rtl\" ? rtlIons : icons;\n  const itemsRefs = useRef({});\n  const sortedData = groupOptions({\n    data: filteredData\n  });\n  const {\n    scrollIntoView,\n    targetRef,\n    scrollableRef\n  } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true\n  });\n  let groupName = null;\n  sortedData.forEach((item, index) => {\n    const itemComponent = /* @__PURE__ */React.createElement(UnstyledButton, {\n      unstyled,\n      tabIndex: -1,\n      onClick: () => onSelect(item.value),\n      key: item.value,\n      onMouseEnter: () => setHovered(index),\n      className: cx(classes.transferListItem, {\n        [classes.transferListItemHovered]: index === hovered\n      }),\n      ref: node => {\n        if (itemsRefs && itemsRefs.current) {\n          itemsRefs.current[item.value] = node;\n        }\n      }\n    }, /* @__PURE__ */React.createElement(ItemComponent, {\n      data: item,\n      selected: selection.includes(item.value),\n      radius\n    }));\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push( /* @__PURE__ */React.createElement(\"div\", {\n          className: classes.separator,\n          key: groupName\n        }, /* @__PURE__ */React.createElement(Divider, {\n          classNames: {\n            label: classes.separatorLabel\n          },\n          label: groupName\n        })));\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift( /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.separator\n    }, /* @__PURE__ */React.createElement(Divider, {\n      unstyled,\n      classNames: {\n        label: classes.separatorLabel\n      }\n    })));\n  }\n  const handleSearchKeydown = event => {\n    switch (event.key) {\n      case \"Enter\":\n        {\n          event.preventDefault();\n          if (filteredData[hovered]) {\n            onSelect(filteredData[hovered].value);\n          }\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          setHovered(current => {\n            var _a;\n            const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"end\"\n            });\n            return nextIndex;\n          });\n          break;\n        }\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          setHovered(current => {\n            var _a;\n            const nextIndex = current > 0 ? current - 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"start\"\n            });\n            return nextIndex;\n          });\n        }\n    }\n  };\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.transferList, className)\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    weight: 500,\n    unstyled,\n    className: classes.transferListTitle\n  }, title), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListBody\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListHeader\n  }, /* @__PURE__ */React.createElement(TextInput, {\n    unstyled,\n    value: query,\n    onChange: event => {\n      setQuery(event.currentTarget.value);\n      setHovered(0);\n    },\n    onFocus: () => setHovered(0),\n    onBlur: () => setHovered(-1),\n    placeholder: searchPlaceholder,\n    radius: 0,\n    onKeyDown: handleSearchKeydown,\n    sx: {\n      flex: 1\n    },\n    classNames: {\n      input: classes.transferListSearch\n    }\n  }), /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: selection.length === 0,\n    onClick: onMove,\n    unstyled\n  }, reversed ? /* @__PURE__ */React.createElement(Icons.Prev, null) : /* @__PURE__ */React.createElement(Icons.Next, null)), showTransferAll && /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: data.length === 0,\n    onClick: onMoveAll,\n    unstyled\n  }, reversed ? /* @__PURE__ */React.createElement(Icons.First, null) : /* @__PURE__ */React.createElement(Icons.Last, null))), /* @__PURE__ */React.createElement(ListComponent, {\n    ref: scrollableRef,\n    onMouseLeave: () => setHovered(-1),\n    className: classes.transferListItems,\n    style: {\n      height,\n      position: \"relative\",\n      overflowX: \"hidden\"\n    }\n  }, groupedItems.length > 0 || unGroupedItems.length > 0 ? /* @__PURE__ */React.createElement(React.Fragment, null, groupedItems, unGroupedItems) : /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    unstyled,\n    size: \"sm\",\n    align: \"center\",\n    mt: \"sm\"\n  }, nothingFound))));\n}\nRenderList.displayName = \"@mantine/core/RenderList\";\nexport { RenderList };","map":{"version":3,"mappings":"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","names":["icons","Prev","PrevIcon","Next","NextIcon","First","FirstIcon","Last","LastIcon","rtlIons","RenderList","className","data","onSelect","selection","itemComponent","ItemComponent","listComponent","searchPlaceholder","filter","nothingFound","title","showTransferAll","reversed","onMoveAll","onMove","height","radius","classNames","styles","limit","unstyled","classes","cx","theme","useStyles","native","SelectScrollArea","name","unGroupedItems","groupedItems","query","setQuery","useState","hovered","setHovered","filteredData","item","slice","ListComponent","Icons","dir","itemsRefs","useRef","sortedData","groupOptions","scrollIntoView","targetRef","scrollableRef","useScrollIntoView","duration","offset","cancelable","isList","groupName","forEach","index","React","createElement","UnstyledButton","tabIndex","onClick","value","key","onMouseEnter","transferListItem","transferListItemHovered","ref","node","current","selected","includes","group","push","separator","Divider","label","separatorLabel","length","unshift","handleSearchKeydown","event","preventDefault","_a","nextIndex","alignment","transferList","Text","weight","transferListTitle","transferListBody","transferListHeader","TextInput","onChange","currentTarget","onFocus","onBlur","placeholder","onKeyDown","sx","flex","input","transferListSearch","ActionIcon","variant","size","transferListControl","disabled","onMouseLeave","transferListItems","style","position","overflowX","Fragment","color","align","mt","displayName"],"sources":["C:\\projects\\Social Media Project\\node_modules\\@mantine\\core\\src\\TransferList\\RenderList\\RenderList.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { DefaultProps, Selectors, MantineNumberSize } from '@mantine/styles';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { ActionIcon } from '../../ActionIcon';\nimport { TextInput } from '../../TextInput';\nimport { Text } from '../../Text';\nimport { Divider } from '../../Divider/Divider';\nimport { LastIcon, NextIcon, FirstIcon, PrevIcon } from '../../Pagination/icons';\nimport { TransferListItem, TransferListItemComponent } from '../types';\nimport useStyles from './RenderList.styles';\n\nexport type RenderListStylesNames = Selectors<typeof useStyles>;\n\nexport interface RenderListProps extends DefaultProps<RenderListStylesNames> {\n  data: TransferListItem[];\n  onSelect(value: string): void;\n  selection: string[];\n  itemComponent: TransferListItemComponent;\n  searchPlaceholder: string;\n  filter(query: string, item: TransferListItem): boolean;\n  nothingFound?: React.ReactNode;\n  title?: React.ReactNode;\n  reversed?: boolean;\n  showTransferAll?: boolean;\n  onMoveAll(): void;\n  onMove(): void;\n  height: number;\n  radius: MantineNumberSize;\n  listComponent?: React.FC<any>;\n  limit?: number;\n}\n\nconst icons = {\n  Prev: PrevIcon,\n  Next: NextIcon,\n  First: FirstIcon,\n  Last: LastIcon,\n};\n\nconst rtlIons = {\n  Next: PrevIcon,\n  Prev: NextIcon,\n  Last: FirstIcon,\n  First: LastIcon,\n};\n\nexport function RenderList({\n  className,\n  data,\n  onSelect,\n  selection,\n  itemComponent: ItemComponent,\n  listComponent,\n  searchPlaceholder,\n  filter,\n  nothingFound,\n  title,\n  showTransferAll,\n  reversed,\n  onMoveAll,\n  onMove,\n  height,\n  radius,\n  classNames,\n  styles,\n  limit,\n  unstyled,\n}: RenderListProps) {\n  const { classes, cx, theme } = useStyles(\n    { reversed, native: listComponent !== SelectScrollArea, radius },\n    { name: 'TransferList', classNames, styles, unstyled }\n  );\n  const unGroupedItems: React.ReactElement<any>[] = [];\n  const groupedItems: React.ReactElement<any>[] = [];\n  const [query, setQuery] = useState('');\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter((item) => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || 'div';\n  const Icons = theme.dir === 'rtl' ? rtlIons : icons;\n\n  const itemsRefs = useRef<Record<string, HTMLButtonElement>>({});\n\n  const sortedData: TransferListItem[] = groupOptions({ data: filteredData });\n\n  const { scrollIntoView, targetRef, scrollableRef } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true,\n  });\n\n  let groupName = null;\n\n  sortedData.forEach((item, index) => {\n    const itemComponent = (\n      <UnstyledButton\n        unstyled={unstyled}\n        tabIndex={-1}\n        onClick={() => onSelect(item.value)}\n        key={item.value}\n        onMouseEnter={() => setHovered(index)}\n        className={cx(classes.transferListItem, {\n          [classes.transferListItemHovered]: index === hovered,\n        })}\n        ref={(node: HTMLButtonElement) => {\n          if (itemsRefs && itemsRefs.current) {\n            itemsRefs.current[item.value] = node;\n          }\n        }}\n      >\n        <ItemComponent data={item} selected={selection.includes(item.value)} radius={radius} />\n      </UnstyledButton>\n    );\n\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push(\n          <div className={classes.separator} key={groupName}>\n            <Divider classNames={{ label: classes.separatorLabel }} label={groupName} />\n          </div>\n        );\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift(\n      <div className={classes.separator}>\n        <Divider unstyled={unstyled} classNames={{ label: classes.separatorLabel }} />\n      </div>\n    );\n  }\n\n  const handleSearchKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.key) {\n      case 'Enter': {\n        event.preventDefault();\n        if (filteredData[hovered]) {\n          onSelect(filteredData[hovered].value);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'end',\n          });\n\n          return nextIndex;\n        });\n        break;\n      }\n\n      case 'ArrowUp': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current > 0 ? current - 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'start',\n          });\n\n          return nextIndex;\n        });\n      }\n    }\n  };\n\n  return (\n    <div className={cx(classes.transferList, className)}>\n      {title && (\n        <Text weight={500} unstyled={unstyled} className={classes.transferListTitle}>\n          {title}\n        </Text>\n      )}\n\n      <div className={classes.transferListBody}>\n        <div className={classes.transferListHeader}>\n          <TextInput\n            unstyled={unstyled}\n            value={query}\n            onChange={(event) => {\n              setQuery(event.currentTarget.value);\n              setHovered(0);\n            }}\n            onFocus={() => setHovered(0)}\n            onBlur={() => setHovered(-1)}\n            placeholder={searchPlaceholder}\n            radius={0}\n            onKeyDown={handleSearchKeydown}\n            sx={{ flex: 1 }}\n            classNames={{ input: classes.transferListSearch }}\n          />\n\n          <ActionIcon\n            variant=\"default\"\n            size={36}\n            radius={0}\n            className={classes.transferListControl}\n            disabled={selection.length === 0}\n            onClick={onMove}\n            unstyled={unstyled}\n          >\n            {reversed ? <Icons.Prev /> : <Icons.Next />}\n          </ActionIcon>\n\n          {showTransferAll && (\n            <ActionIcon\n              variant=\"default\"\n              size={36}\n              radius={0}\n              className={classes.transferListControl}\n              disabled={data.length === 0}\n              onClick={onMoveAll}\n              unstyled={unstyled}\n            >\n              {reversed ? <Icons.First /> : <Icons.Last />}\n            </ActionIcon>\n          )}\n        </div>\n\n        <ListComponent\n          ref={scrollableRef}\n          onMouseLeave={() => setHovered(-1)}\n          className={classes.transferListItems}\n          style={{ height, position: 'relative', overflowX: 'hidden' }}\n        >\n          {groupedItems.length > 0 || unGroupedItems.length > 0 ? (\n            <>\n              {groupedItems}\n              {unGroupedItems}\n            </>\n          ) : (\n            <Text color=\"dimmed\" unstyled={unstyled} size=\"sm\" align=\"center\" mt=\"sm\">\n              {nothingFound}\n            </Text>\n          )}\n        </ListComponent>\n      </div>\n    </div>\n  );\n}\n\nRenderList.displayName = '@mantine/core/RenderList';\n"]},"metadata":{},"sourceType":"module"}