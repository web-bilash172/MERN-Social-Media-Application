{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps, extractSystemStyles } from '@mantine/styles';\nimport { useId } from '@mantine/hooks';\nimport { CheckboxIcon } from './CheckboxIcon.js';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup.js';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context.js';\nimport useStyles from './Checkbox.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { Input } from '../Input/Input.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  size: \"sm\",\n  transitionDuration: 100,\n  icon: CheckboxIcon,\n  labelPosition: \"right\"\n};\nconst Checkbox = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Checkbox\", defaultProps, props),\n    {\n      className,\n      style,\n      sx,\n      checked,\n      disabled,\n      color,\n      label,\n      indeterminate,\n      id,\n      size,\n      radius,\n      wrapperProps,\n      children,\n      classNames,\n      styles,\n      transitionDuration,\n      icon: Icon,\n      unstyled,\n      labelPosition,\n      description,\n      error\n    } = _a,\n    others = __objRest(_a, [\"className\", \"style\", \"sx\", \"checked\", \"disabled\", \"color\", \"label\", \"indeterminate\", \"id\", \"size\", \"radius\", \"wrapperProps\", \"children\", \"classNames\", \"styles\", \"transitionDuration\", \"icon\", \"unstyled\", \"labelPosition\", \"description\", \"error\"]);\n  const ctx = useCheckboxGroupContext();\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size: (ctx == null ? void 0 : ctx.size) || size,\n    radius,\n    color,\n    transitionDuration,\n    labelPosition,\n    error: !!error,\n    indeterminate\n  }, {\n    name: \"Checkbox\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: ctx.onChange\n  } : {};\n  return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({\n    className: cx(classes.root, className),\n    sx,\n    style\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.body)\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.inner\n  }, /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    id: uuid,\n    ref,\n    type: \"checkbox\",\n    className: classes.input,\n    checked,\n    disabled\n  }, rest), contextProps)), /* @__PURE__ */React.createElement(Icon, {\n    indeterminate,\n    className: classes.icon\n  })), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.labelWrapper\n  }, label && /* @__PURE__ */React.createElement(\"label\", {\n    className: classes.label,\n    \"data-disabled\": disabled || void 0,\n    htmlFor: uuid,\n    \"data-testid\": \"label\"\n  }, label), description && /* @__PURE__ */React.createElement(Input.Description, {\n    className: classes.description\n  }, description), error && error !== \"boolean\" && /* @__PURE__ */React.createElement(Input.Error, {\n    className: classes.error\n  }, error))));\n});\nCheckbox.displayName = \"@mantine/core/Checkbox\";\nCheckbox.Group = CheckboxGroup;\nexport { Checkbox };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","size","transitionDuration","icon","CheckboxIcon","labelPosition","Checkbox","forwardRef","props","ref","_a","useComponentDefaultProps","className","style","sx","checked","disabled","color","label","indeterminate","id","radius","wrapperProps","children","classNames","styles","Icon","unstyled","description","error","others","ctx","useCheckboxGroupContext","uuid","useId","systemStyles","rest","extractSystemStyles","classes","cx","useStyles","name","contextProps","includes","onChange","React","createElement","Box","root","body","inner","type","input","labelWrapper","htmlFor","Input","Description","Error","displayName","Group","CheckboxGroup"],"sources":["C:\\projects\\Social Media Project\\frontend design\\node_modules\\@mantine\\core\\src\\Checkbox\\Checkbox.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  extractSystemStyles,\n  MantineNumberSize,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { useId } from '@mantine/hooks';\nimport { Box } from '../Box';\nimport { CheckboxIcon } from './CheckboxIcon';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context';\nimport useStyles, { CheckboxStylesParams } from './Checkbox.styles';\nimport { Input } from '../Input';\n\nexport type CheckboxStylesNames = Selectors<typeof useStyles>;\n\nexport interface CheckboxProps\n  extends DefaultProps<CheckboxStylesNames, CheckboxStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'type' | 'size'> {\n  /** Key of theme.colors */\n  color?: MantineColor;\n\n  /** Key of theme.radius or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined label font-size and checkbox width and height in px */\n  size?: MantineSize;\n\n  /** Checkbox label */\n  label?: React.ReactNode;\n\n  /** Indeterminate state of checkbox, overwrites checked */\n  indeterminate?: boolean;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n\n  /** id to connect label with input */\n  id?: string;\n\n  /** Transition duration in ms */\n  transitionDuration?: number;\n\n  /** Icon rendered when checkbox has checked or indeterminate state */\n  icon?: React.FC<{ indeterminate: boolean; className: string }>;\n\n  /** Position of label */\n  labelPosition?: 'left' | 'right';\n\n  /** description, displayed after label */\n  description?: React.ReactNode;\n\n  /** Displays error message after input */\n  error?: React.ReactNode;\n}\n\nconst defaultProps: Partial<CheckboxProps> = {\n  size: 'sm',\n  transitionDuration: 100,\n  icon: CheckboxIcon,\n  labelPosition: 'right',\n};\n\ntype CheckboxComponent = ForwardRefWithStaticComponents<\n  CheckboxProps,\n  { Group: typeof CheckboxGroup }\n>;\n\nexport const Checkbox: CheckboxComponent = forwardRef<HTMLInputElement, CheckboxProps>(\n  (props, ref) => {\n    const {\n      className,\n      style,\n      sx,\n      checked,\n      disabled,\n      color,\n      label,\n      indeterminate,\n      id,\n      size,\n      radius,\n      wrapperProps,\n      children,\n      classNames,\n      styles,\n      transitionDuration,\n      icon: Icon,\n      unstyled,\n      labelPosition,\n      description,\n      error,\n      ...others\n    } = useComponentDefaultProps('Checkbox', defaultProps, props);\n\n    const ctx = useCheckboxGroupContext();\n    const uuid = useId(id);\n    const { systemStyles, rest } = extractSystemStyles(others);\n    const { classes, cx } = useStyles(\n      {\n        size: ctx?.size || size,\n        radius,\n        color,\n        transitionDuration,\n        labelPosition,\n        error: !!error,\n        indeterminate,\n      },\n      { name: 'Checkbox', classNames, styles, unstyled }\n    );\n\n    const contextProps = ctx\n      ? {\n          checked: ctx.value.includes(rest.value as string),\n          onChange: ctx.onChange,\n        }\n      : {};\n\n    return (\n      <Box\n        className={cx(classes.root, className)}\n        sx={sx}\n        style={style}\n        {...systemStyles}\n        {...wrapperProps}\n      >\n        <div className={cx(classes.body)}>\n          <div className={classes.inner}>\n            <input\n              id={uuid}\n              ref={ref}\n              type=\"checkbox\"\n              className={classes.input}\n              checked={checked}\n              disabled={disabled}\n              {...rest}\n              {...contextProps}\n            />\n\n            <Icon indeterminate={indeterminate} className={classes.icon} />\n          </div>\n\n          <div className={classes.labelWrapper}>\n            {label && (\n              <label\n                className={classes.label}\n                data-disabled={disabled || undefined}\n                htmlFor={uuid}\n                data-testid=\"label\"\n              >\n                {label}\n              </label>\n            )}\n\n            {description && (\n              <Input.Description className={classes.description}>{description}</Input.Description>\n            )}\n\n            {error && error !== 'boolean' && (\n              <Input.Error className={classes.error}>{error}</Input.Error>\n            )}\n          </div>\n        </div>\n      </Box>\n    );\n  }\n) as any;\n\nCheckbox.displayName = '@mantine/core/Checkbox';\nCheckbox.Group = CheckboxGroup;\n"]},"metadata":{},"sourceType":"module"}