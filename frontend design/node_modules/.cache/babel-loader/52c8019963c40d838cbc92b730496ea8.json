{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles.js';\nvar useStyles = createStyles((theme, _ref, getRef) => {\n  let {\n    size\n  } = _ref;\n  return {\n    sliderThumb: {\n      ref: getRef(\"sliderThumb\")\n    },\n    slider: {\n      position: \"relative\",\n      height: theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) + 2,\n      boxSizing: \"border-box\",\n      marginLeft: theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2,\n      marginRight: theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2,\n      outline: 0,\n      [`&:focus .${getRef(\"sliderThumb\")}`]: {\n        outline: \"none\",\n        boxShadow: theme.focusRing === \"always\" || theme.focusRing === \"auto\" ? `0 0 0 2px ${theme.colorScheme === \"dark\" ? theme.colors.dark[9] : theme.white}, 0 0 0 4px ${theme.colors[theme.primaryColor][theme.colorScheme === \"dark\" ? 7 : 5]}` : void 0\n      },\n      [`&:focus:not(:focus-visible) .${getRef(\"sliderThumb\")}`]: {\n        boxShadow: theme.focusRing === \"auto\" || theme.focusRing === \"never\" ? \"none\" : void 0\n      }\n    },\n    sliderOverlay: {\n      position: \"absolute\",\n      boxSizing: \"border-box\",\n      top: 0,\n      bottom: 0,\n      left: -theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2 - 1,\n      right: -theme.fn.size({\n        size,\n        sizes: THUMB_SIZES\n      }) / 2 - 1,\n      borderRadius: 1e3\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":";;AAEA,gBAAeA,YAAY,CAAC,CAACC,KAAK,QAAYC,MAAM;EAAA,IAAhB;IAAEC;EAAI,CAAE;EAAA,OAAc;IACxDC,WAAW,EAAE;MACXC,GAAG,EAAEH,MAAM,CAAC,aAAa;IAC7B,CAAG;IACDI,MAAM,EAAE;MACNC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAEP,KAAK,CAACQ,EAAE,CAACN,IAAI,CAAC;QAAEA,IAAI;QAAEO,KAAK,EAAEC;MAAW,CAAE,CAAC,GAAG,CAAC;MACvDC,SAAS,EAAE,YAAY;MACvBC,UAAU,EAAEZ,KAAK,CAACQ,EAAE,CAACN,IAAI,CAAC;QAAEA,IAAI;QAAEO,KAAK,EAAEC;MAAW,CAAE,CAAC,GAAG,CAAC;MAC3DG,WAAW,EAAEb,KAAK,CAACQ,EAAE,CAACN,IAAI,CAAC;QAAEA,IAAI;QAAEO,KAAK,EAAEC;MAAW,CAAE,CAAC,GAAG,CAAC;MAC5DI,OAAO,EAAE,CAAC;MACV,CAAE,YAAWb,MAAM,CAAC,aAAa,CAAE,EAAC,GAAG;QACrCa,OAAO,EAAE,MAAM;QACfC,SAAS,EAAEf,KAAK,CAACgB,SAAS,KAAK,QAAQ,IAAIhB,KAAK,CAACgB,SAAS,KAAK,MAAM,GAAI,aAAYhB,KAAK,CAACiB,WAAW,KAAK,MAAM,GAAGjB,KAAK,CAACkB,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGnB,KAAK,CAACoB,KAAM,eAAcpB,KAAK,CAACkB,MAAM,CAAClB,KAAK,CAACqB,YAAY,CAAC,CAACrB,KAAK,CAACiB,WAAW,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,EAAC,GAAG,KAAK;MAC3P,CAAK;MACD,CAAE,gCAA+BhB,MAAM,CAAC,aAAa,CAAE,EAAC,GAAG;QACzDc,SAAS,EAAEf,KAAK,CAACgB,SAAS,KAAK,MAAM,IAAIhB,KAAK,CAACgB,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,KAAK;MAC3F;IACA,CAAG;IACDM,aAAa,EAAE;MACbhB,QAAQ,EAAE,UAAU;MACpBK,SAAS,EAAE,YAAY;MACvBY,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAACzB,KAAK,CAACQ,EAAE,CAACN,IAAI,CAAC;QAAEA,IAAI;QAAEO,KAAK,EAAEC;MAAW,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC;MAC1DgB,KAAK,EAAE,CAAC1B,KAAK,CAACQ,EAAE,CAACN,IAAI,CAAC;QAAEA,IAAI;QAAEO,KAAK,EAAEC;MAAW,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC;MAC3DiB,YAAY,EAAE;IAClB;EACA,CAAC;AAAA,CAAC,CAAC","names":["createStyles","theme","getRef","size","sliderThumb","ref","slider","position","height","fn","sizes","THUMB_SIZES","boxSizing","marginLeft","marginRight","outline","boxShadow","focusRing","colorScheme","colors","dark","white","primaryColor","sliderOverlay","top","bottom","left","right","borderRadius"],"sources":["C:\\projects\\Social Media Project\\node_modules\\@mantine\\core\\src\\ColorPicker\\ColorSlider\\ColorSlider.styles.ts"],"sourcesContent":["import { createStyles, MantineSize } from '@mantine/styles';\n\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles';\n\ninterface ColorSliderStyles {\n  size: MantineSize;\n}\n\nexport default createStyles((theme, { size }: ColorSliderStyles, getRef) => ({\n  sliderThumb: {\n    ref: getRef('sliderThumb'),\n  },\n\n  slider: {\n    position: 'relative',\n    height: theme.fn.size({ size, sizes: THUMB_SIZES }) + 2,\n    boxSizing: 'border-box',\n    marginLeft: theme.fn.size({ size, sizes: THUMB_SIZES }) / 2,\n    marginRight: theme.fn.size({ size, sizes: THUMB_SIZES }) / 2,\n    outline: 0,\n\n    [`&:focus .${getRef('sliderThumb')}`]: {\n      outline: 'none',\n      boxShadow:\n        theme.focusRing === 'always' || theme.focusRing === 'auto'\n          ? `0 0 0 2px ${\n              theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.white\n            }, 0 0 0 4px ${theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 7 : 5]}`\n          : undefined,\n    },\n\n    [`&:focus:not(:focus-visible) .${getRef('sliderThumb')}`]: {\n      boxShadow: theme.focusRing === 'auto' || theme.focusRing === 'never' ? 'none' : undefined,\n    },\n  },\n\n  sliderOverlay: {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    top: 0,\n    bottom: 0,\n    left: -theme.fn.size({ size, sizes: THUMB_SIZES }) / 2 - 1,\n    right: -theme.fn.size({ size, sizes: THUMB_SIZES }) / 2 - 1,\n    borderRadius: 1000,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}